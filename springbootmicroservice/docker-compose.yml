version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  dbmysql:
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: LR4135alex*
      MYSQL_USER: admin
      MYSQL_DATABASE: freelance

    ports:
      - "3306:3306"
    volumes:
      - freelance_volume

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - /data/db




  eureka-server:
    image: eureka:latest
    container_name: eureka-server
    build:
      context: eureka-server/.
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ROOT=debug

  api-gateway:
    image: api-gateway:latest
    build:
      context: api-gateway/.
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka

  notification:
    image: notification:latest
    build:
      context: notification/.
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
      - eureka-server
      - broker
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka
      - spring.data.mongodb.host=mongodb

  chatroom:
    image: chatroom:latest
    build:
      context: chatroom/.
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - mongodb
      - eureka-server

    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka
      - spring.data.mongodb.host=mongodb





  userjob:
    depends_on:
      - dbmysql
      - eureka-server
    image: userjob:latest
    container_name: userjob
    build:
      context: userjob/.
      dockerfile: Dockerfile  #docker file path (. means root directory)
    ports:
      - "8000:8000"
    environment: { SPRING_DATASOURCE_URL: 'jdbc:mysql://dbmysql:3306/freelance' ,
                    SPRING_PASSWORD: "LR4135alex*",
                    SPRING_USER: "admin",
                   EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:  "http://eureka-server:8761/eureka"

    }




