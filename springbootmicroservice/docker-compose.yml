version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

#  dbmysql:
#    container_name: dbmysql
#    image: mysql:latest
#    restart: unless-stopped
#    environment:
#      MYSQL_ROOT_PASSWORD: "password"
#      MYSQL_USER: "admin"
#      MYSQL_DATABASE: freelance
#      MYSQL_PASSWORD: "password"
#
#    ports:
#      - "3307:3307"
#    volumes:
#      - /var/lib/docker/volumes/freelance_volume/_data
#
#  mongodb:
#    container_name: mongodb
#    image: mongo:latest
#    restart: unless-stopped
#    ports:
#      - "27017:27017"
#    volumes:
#      - /data/db

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
        - "9411:9411"



#  eureka-server:
#    image: alex0121/eureka-server:latest
#    container_name: eureka-server
#    depends_on:
#      - zipkin
#    build:
#      context: eureka-server/.
#      dockerfile: Dockerfile.layered
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker


  api-gateway:
    image: alex0121/api-gateway:latest
    build:
      context: api-gateway/.
      dockerfile: Dockerfile.layered
    ports:
      - "8080:8080"
    depends_on:
      - zipkin
    environment:
      - SPRING_PROFILES_ACTIVE=docker


  notification:
    image: alex0121/notification:latest
    build:
      context: notification/.
      dockerfile: Dockerfile.layered
    ports:
      - "8081:8081"
    depends_on:
      - broker
      - zipkin
    environment:
      - SPRING_PROFILES_ACTIVE=docker


  chatroom:
    image: alex0121/chatroom:latest
    build:
      context: chatroom/.
      dockerfile: Dockerfile.layered
    ports:
      - "8084:8084"
    depends_on:
      - zipkin

    environment:
        - SPRING_PROFILES_ACTIVE=docker



  userjob:
    depends_on:
      - zipkin
    image: alex0121/userjob:latest
    container_name: userjob
    build:
      context: userjob/.
      dockerfile: Dockerfile.layered #docker file path (. means root directory)
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  payment-service:
    image: alex0121/payment-service:latest
    build:
      context: payment-service/.
      dockerfile: Dockerfile.layered
    ports:
      - "8070:8070"
    depends_on:
      - zipkin

    environment:
      - SPRING_PROFILES_ACTIVE=docker


#  prometheus:
#    image: prom/prometheus:v2.37.6
#    container_name: prometheus
#    restart: unless-stopped
#    ports:
#      - "9090:9090"
##    volumes:
##      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    depends_on:
#      - userjob
#      - notification
#      - chatroom
#      - api-gateway
#
#  grafana:
#    image: grafana/grafana-oss:8.5.2
#    container_name: grafana
#    restart: unless-stopped
#    ports:
#      - "3000:3000"
#    links:
#      - prometheus:prometheus
##    volumes:
##      - /var/lib/grafana
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=password
#    depends_on:
#      - userjob
#      - notification
#      - chatroom
#      - api-gateway
#      - prometheus





